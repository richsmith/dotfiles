* Aesthetics
#+begin_src emacs-lisp

(use-package minions
  :config (minions-mode 1))

(use-package nyan-mode
  :init
  (setq nyan-bar-length 16)
  :config
  (nyan-mode t))
(use-package beacon)

(use-package nord-theme)

(use-package atom-one-dark-theme
  :config
  (load-theme 'atom-one-dark t))

#+end_src

* Display Type
#+begin_src emacs-lisp

(defconst laptop-screen-width 1920)
(defvar machine-type nil)

(defun get-primary-monitor-width ()
  "Get the width of the primary monitor in pixels."
  (let* ((primary-monitor (car (display-monitor-attributes-list)))
         (geometry (cdr (assoc 'geometry primary-monitor)))
         (width (nth 2 geometry)))
    width))

(defun get-machine-type ()
  (let ((width (get-primary-monitor-width)))
    (if (<= width laptop-screen-width)
        'laptop
      'desktop)))

(setq machine-type (get-machine-type))

(if (eq machine-type 'desktop)
    (setq-default default-frame-alist
       '((height . 60)
         (width . 176)
         (left . 613)
         (top . 100)
         (vertical-scroll-bars . nil)
         (horizontal-scroll-bars . nil)
         (tool-bar-lines . 0))))
  (setq-default default-frame-alist
       '((height . 55)
         (width . 176)
         (left . 613)
         (top . 100)
         (vertical-scroll-bars . nil)
         (horizontal-scroll-bars . nil)
         (tool-bar-lines . 0)))
#+end_src

* Frame Management
These two packages don't seem to work properly.
 
#+begin_src emacs-lisp

(use-package frame-fns
  :straight (frame-fns :type git :host github :repo "emacsmirror/frame-fns"))

(use-package frame-cmds
  :straight (frame-cmds :type git :host github :repo "emacsmirror/frame-cmds")
  :bind (("M-<up>" . move-frame-up)
         ("M-<down>" . move-frame-down)
         ("M-<left>" . move-frame-left)
         ("M-<right>" . move-frame-right)))

#+end_src
